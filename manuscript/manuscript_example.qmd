---
bibliography: ../bib-files/references.bib
csl: ../bib-files/apa.csl
format: 
  docx:
    reference-doc: ../bib-files/reference-doc.docx
output:
  officedown::rdocx_document:
    page_margins:
      bottom: 1
      footer: 0
      gutter: 0
      header: 0.5
      left: 1
      right: 1
editor: 
  markdown: 
    wrap: sentence
---

```{r}
#| include: false

# Libraries
library(tidyverse)
library(flextable)
library(ggplot2)

# Analysis_objects
load("../analysis_objects/intro_example.RData")


# Global settings for Figures
knitr::opts_chunk$set(
  echo = F,
  fig.align = "center",
  fig.pos = "!t", 
  out.extra = "",
  fig.show = "asis",
  message = FALSE,
  tab.topcaption = T,
  warning = FALSE
)

# Global settings for Tables
set_flextable_defaults(
  font.family = "Times", 
  font.size = 10,
  font.color = "black",
  line_spacing = 1,
  padding.bottom = 1, 
  padding.top = 1,
  padding.left = 1,
  padding.right = 1
)
```

# Introduction

This paragraph contains plain text.
It will just show up as like this in your rendered document.

This paragraph contains plain text mixed with code.
We could report, for instance, that 60 and 40 add up to `r 60+40`.
We can also put the relevant statistics in an object like a list.
For instance, we could say that `r my_list$number1` + `r my_list$number2` = `r my_list$number1 + my_list$number2`.

## Special symbols and formatting

In our manuscript, we will often want to use special symbols, such as alpha or beta.
There are a few ways to get them.
First, you can use the following notation: $\beta$ and $\alpha$.
Alternatively, you can switch to 'Visual' mode, and click 'Insert > Special Characters'.

There are also several ways to handle text formatting.
We can print text in *italics*, in **bold**, or even ***bold italics***.
Putting '\^' around a word or phrase makes it ^superscript^, while '\~' makes it ~subscript~.

To include a full url link in the text, it is enough to put it between '\<\>': <https://google.com>.
Linked text can be created [like this](https://google.com).
For an overview of all formatting options, [go here](https://quarto.org/docs/authoring/markdown-basics.html).

If it is necessary to include a pagebreak, you can do so like this:

{{< pagebreak >}}

## Figures

Figures can be generated from two sources: a file in your project (e.g., a .png file) or based on an object (e.g., a ggplot object).
Either way, you insert a Figure by using a codeblock.

<br>

```{r}
#| label: figure1
#| echo: false
#| dpi: 300
#| fig-cap: | 
#|   **Figure 1.** This is a Figure that is based on a .jpg file.
knitr::include_graphics("figures/fig1.jpg")

```

<br>

Or based on a ggplot object:

<br>

```{r}
#| label: figure2
#| echo: false
#| dpi: 300
#| fig-cap: | 
#|   **Figure 2.** This is a Figure based on a ggplot object.
ggplot(cars) +
  geom_point(aes(speed, dist))
```

<br>

## Tables

There are several ways to make tables.
I find the `flextable` package to be the most versatile one.
Flextable has a *lot* of options to customize your Table, which will take some getting used to. 
Fortunately, the [documentation](https://ardata-fr.github.io/flextable-book/) is very good, In my experience, you will be recreating slight variations of the same two-three Tables 98% of the time.
It can therefore be useful to store the template code of a few often-used examples someplace easy to find.
Exercise 2 will provide more detail on how to create Tables.

{{< pagebreak >}}

```{r}
#| label: tab-1
#| echo: false

head(mtcars) |> 
  as_tibble(rownames = "type") |> 
  select(type, mpg, cyl, disp) |> 
  flextable() |>  # turn tibble into flextable
  add_header_lines( # Add a header line for the Table title.
    values = as_paragraph(as_b("Table 1. "), "This is a simple example of a Table")
    ) |> 
  hline_top(border = fp_border_default(width = 0), part = "header") |>  # remove the line above the title
  autofit() # Make the Table automatically fit the page
```

# Referencing

Quarto can automatically handle your in-text references and bibliography.
First, give a unique tag to the references that you want to include.
To do so, open your reference software (e.g., Zotero).
In the 'Extra' meta-data field, type 'Citation Key: your_unique_tag.
I often use 'lastname_year' (e.g., Citation Key: vermeent_2025).

You can now use this tag in Quarto by putting a '@' in front of it.
First of all, you can place a reference in parentheses behind the sentence [e.g., @vermeent_2025] (note the square brackets).
As described by @vermeent_2025, you can also place a reference in the sentence.
You can do more complex things as well, like having both a sentence and a reference in parentheses; if you do this, make sure to escape semi-colons that do not separate references [escaping is done using a backslash\; @vermeent_2025].
Multiple references are separated using a semi-colon [@vermeent_2025; @vermeent_2030].

{{< pagebreak >}}

# References

::: {#refs}
:::
